
fn fib_rec(x: i32) -> i32 {
    if x <= 1 {
        return x;
    }
    return fib_rec(x - 1) + fib_rec(x - 2);
}

fn compute_stuff(n: i32) -> i32 {
    let mut x: i32 = 0;
    while x++ < n {}
    return x - 1011;
}

fn identity(x: fn(i32) -> i32) -> fn(i32) -> i32 {
    return x;
}

fn main(argc: i32, argv: *const *const char) -> i32 {
    let test: [(i32, i32); 5] = [
        (0, 0),
        (1, 2),
        (2, 4),
        (3, 6),
        (4, 8),
    ];
    let x: i32 = compute_stuff();
    if identity(fib_rec)(x) != 233 {
        return 0;e
    }
    return -1;
}
